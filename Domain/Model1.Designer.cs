//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "FK_AgendaSession", "Agenda", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Domain.Conference), "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Domain.Session), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_AgendaSpeaker", "Agenda", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Domain.Conference), "Speaker", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Domain.Speaker), true)]
[assembly: EdmRelationshipAttribute("Model", "ConferenceAttendees", "Agenda", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Domain.Conference), "Attendee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Domain.Attendee))]
[assembly: EdmRelationshipAttribute("Model", "SessionAttendees", "Attendee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Domain.Attendee), "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Domain.Session))]
[assembly: EdmRelationshipAttribute("Model", "SessionSpeaker", "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Domain.Session), "Speaker", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Domain.Speaker))]

#endregion

namespace Domain
{
    #region Contexts

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ConferenceContext : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initializes a new ConferenceContext object using the connection string found in the 'ConferenceContext' section of the application configuration file.
        /// </summary>
        public ConferenceContext() : base("name=ConferenceContext", "ConferenceContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new ConferenceContext object.
        /// </summary>
        public ConferenceContext(string connectionString) : base(connectionString, "ConferenceContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new ConferenceContext object.
        /// </summary>
        public ConferenceContext(EntityConnection connection) : base(connection, "ConferenceContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Conference> Agendas
        {
            get
            {
                if ((_Agendas == null))
                {
                    _Agendas = base.CreateObjectSet<Conference>("Agendas");
                }
                return _Agendas;
            }
        }
        private ObjectSet<Conference> _Agendas;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attendee> Attendees
        {
            get
            {
                if ((_Attendees == null))
                {
                    _Attendees = base.CreateObjectSet<Attendee>("Attendees");
                }
                return _Attendees;
            }
        }
        private ObjectSet<Attendee> _Attendees;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Session> Sessions
        {
            get
            {
                if ((_Sessions == null))
                {
                    _Sessions = base.CreateObjectSet<Session>("Sessions");
                }
                return _Sessions;
            }
        }
        private ObjectSet<Session> _Sessions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Speaker> Speakers
        {
            get
            {
                if ((_Speakers == null))
                {
                    _Speakers = base.CreateObjectSet<Speaker>("Speakers");
                }
                return _Speakers;
            }
        }
        private ObjectSet<Speaker> _Speakers;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Agendas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgendas(Conference conference)
        {
            base.AddObject("Agendas", conference);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Attendees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttendees(Attendee attendee)
        {
            base.AddObject("Attendees", attendee);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Sessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessions(Session session)
        {
            base.AddObject("Sessions", session);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Speakers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpeakers(Speaker speaker)
        {
            base.AddObject("Speakers", speaker);
        }

        #endregion
    }


    #endregion

    #region Entities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Attendee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attendee : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Attendee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Attendee CreateAttendee(global::System.Int32 id, global::System.String name)
        {
            Attendee attendee = new Attendee();
            attendee.Id = id;
            attendee.Name = name;
            return attendee;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ConferenceAttendees", "Agenda")]
        public EntityCollection<Conference> Agendas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Conference>("Model.ConferenceAttendees", "Agenda");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Conference>("Model.ConferenceAttendees", "Agenda", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SessionAttendees", "Session")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("Model.SessionAttendees", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("Model.SessionAttendees", "Session", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Conference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Conference : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Conference object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        public static Conference CreateConference(global::System.Int32 id, global::System.String name, global::System.DateTime startDate, global::System.String endDate)
        {
            Conference conference = new Conference();
            conference.Id = id;
            conference.Name = name;
            conference.StartDate = startDate;
            conference.EndDate = endDate;
            return conference;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.String _EndDate;
        partial void OnEndDateChanging(global::System.String value);
        partial void OnEndDateChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_AgendaSession", "Session")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("Model.FK_AgendaSession", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("Model.FK_AgendaSession", "Session", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_AgendaSpeaker", "Speaker")]
        public EntityCollection<Speaker> Speakers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Speaker>("Model.FK_AgendaSpeaker", "Speaker");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Speaker>("Model.FK_AgendaSpeaker", "Speaker", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ConferenceAttendees", "Attendee")]
        public EntityCollection<Attendee> Attendees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attendee>("Model.ConferenceAttendees", "Attendee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attendee>("Model.ConferenceAttendees", "Attendee", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Session : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Session object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="startHour">Initial value of the StartHour property.</param>
        /// <param name="durationInMinutes">Initial value of the DurationInMinutes property.</param>
        /// <param name="day">Initial value of the Day property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="track">Initial value of the Track property.</param>
        /// <param name="startMinute">Initial value of the StartMinute property.</param>
        /// <param name="capacity">Initial value of the Capacity property.</param>
        /// <param name="agenda_Id">Initial value of the Agenda_Id property.</param>
        public static Session CreateSession(global::System.Int32 id, global::System.String title, global::System.Int32 startHour, global::System.Int32 durationInMinutes, global::System.Int32 day, global::System.String description, global::System.Int32 track, global::System.Int32 startMinute, global::System.Int32 capacity, global::System.Int32 agenda_Id)
        {
            Session session = new Session();
            session.Id = id;
            session.Title = title;
            session.StartHour = startHour;
            session.DurationInMinutes = durationInMinutes;
            session.Day = day;
            session.Description = description;
            session.Track = track;
            session.StartMinute = startMinute;
            session.Capacity = capacity;
            session.Agenda_Id = agenda_Id;
            return session;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StartHour
        {
            get
            {
                return _StartHour;
            }
            set
            {
                OnStartHourChanging(value);
                ReportPropertyChanging("StartHour");
                _StartHour = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartHour");
                OnStartHourChanged();
            }
        }
        private global::System.Int32 _StartHour;
        partial void OnStartHourChanging(global::System.Int32 value);
        partial void OnStartHourChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DurationInMinutes
        {
            get
            {
                return _DurationInMinutes;
            }
            set
            {
                OnDurationInMinutesChanging(value);
                ReportPropertyChanging("DurationInMinutes");
                _DurationInMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DurationInMinutes");
                OnDurationInMinutesChanged();
            }
        }
        private global::System.Int32 _DurationInMinutes;
        partial void OnDurationInMinutesChanging(global::System.Int32 value);
        partial void OnDurationInMinutesChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Day
        {
            get
            {
                return _Day;
            }
            set
            {
                OnDayChanging(value);
                ReportPropertyChanging("Day");
                _Day = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Day");
                OnDayChanged();
            }
        }
        private global::System.Int32 _Day;
        partial void OnDayChanging(global::System.Int32 value);
        partial void OnDayChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Track
        {
            get
            {
                return _Track;
            }
            set
            {
                OnTrackChanging(value);
                ReportPropertyChanging("Track");
                _Track = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Track");
                OnTrackChanged();
            }
        }
        private global::System.Int32 _Track;
        partial void OnTrackChanging(global::System.Int32 value);
        partial void OnTrackChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StartMinute
        {
            get
            {
                return _StartMinute;
            }
            set
            {
                OnStartMinuteChanging(value);
                ReportPropertyChanging("StartMinute");
                _StartMinute = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartMinute");
                OnStartMinuteChanged();
            }
        }
        private global::System.Int32 _StartMinute;
        partial void OnStartMinuteChanging(global::System.Int32 value);
        partial void OnStartMinuteChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.Int32 _Capacity;
        partial void OnCapacityChanging(global::System.Int32 value);
        partial void OnCapacityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Agenda_Id
        {
            get
            {
                return _Agenda_Id;
            }
            set
            {
                OnAgenda_IdChanging(value);
                ReportPropertyChanging("Agenda_Id");
                _Agenda_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Agenda_Id");
                OnAgenda_IdChanged();
            }
        }
        private global::System.Int32 _Agenda_Id;
        partial void OnAgenda_IdChanging(global::System.Int32 value);
        partial void OnAgenda_IdChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_AgendaSession", "Agenda")]
        public Conference Agenda
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conference>("Model.FK_AgendaSession", "Agenda").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conference>("Model.FK_AgendaSession", "Agenda").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Conference> AgendaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conference>("Model.FK_AgendaSession", "Agenda");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Conference>("Model.FK_AgendaSession", "Agenda", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SessionAttendees", "Attendee")]
        public EntityCollection<Attendee> Attendees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attendee>("Model.SessionAttendees", "Attendee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attendee>("Model.SessionAttendees", "Attendee", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SessionSpeaker", "Speaker")]
        public EntityCollection<Speaker> Speakers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Speaker>("Model.SessionSpeaker", "Speaker");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Speaker>("Model.SessionSpeaker", "Speaker", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Speaker")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Speaker : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Speaker object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="bio">Initial value of the Bio property.</param>
        /// <param name="photoUrl">Initial value of the PhotoUrl property.</param>
        /// <param name="agenda_Id">Initial value of the Agenda_Id property.</param>
        public static Speaker CreateSpeaker(global::System.Int32 id, global::System.String name, global::System.String bio, global::System.String photoUrl, global::System.Int32 agenda_Id)
        {
            Speaker speaker = new Speaker();
            speaker.Id = id;
            speaker.Name = name;
            speaker.Bio = bio;
            speaker.PhotoUrl = photoUrl;
            speaker.Agenda_Id = agenda_Id;
            return speaker;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Bio
        {
            get
            {
                return _Bio;
            }
            set
            {
                OnBioChanging(value);
                ReportPropertyChanging("Bio");
                _Bio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Bio");
                OnBioChanged();
            }
        }
        private global::System.String _Bio;
        partial void OnBioChanging(global::System.String value);
        partial void OnBioChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhotoUrl
        {
            get
            {
                return _PhotoUrl;
            }
            set
            {
                OnPhotoUrlChanging(value);
                ReportPropertyChanging("PhotoUrl");
                _PhotoUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhotoUrl");
                OnPhotoUrlChanged();
            }
        }
        private global::System.String _PhotoUrl;
        partial void OnPhotoUrlChanging(global::System.String value);
        partial void OnPhotoUrlChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Agenda_Id
        {
            get
            {
                return _Agenda_Id;
            }
            set
            {
                OnAgenda_IdChanging(value);
                ReportPropertyChanging("Agenda_Id");
                _Agenda_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Agenda_Id");
                OnAgenda_IdChanged();
            }
        }
        private global::System.Int32 _Agenda_Id;
        partial void OnAgenda_IdChanging(global::System.Int32 value);
        partial void OnAgenda_IdChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_AgendaSpeaker", "Agenda")]
        public Conference Agenda
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conference>("Model.FK_AgendaSpeaker", "Agenda").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conference>("Model.FK_AgendaSpeaker", "Agenda").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Conference> AgendaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conference>("Model.FK_AgendaSpeaker", "Agenda");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Conference>("Model.FK_AgendaSpeaker", "Agenda", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SessionSpeaker", "Session")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("Model.SessionSpeaker", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("Model.SessionSpeaker", "Session", value);
                }
            }
        }

        #endregion
    }

    #endregion

}
